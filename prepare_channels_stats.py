# -----------------------------------------
# THIS FILE WAS AUTOGENERATED! DO NOT EDIT!
# -----------------------------------------
# file to edit: 00e_prepare_channels_stats.ipynb

import json
import os
from os.path import dirname, join
from pdb import set_trace

import jupytools
import jupytools.syspath
import pandas as pd

jupytools.syspath.add(join(dirname(os.getcwd()), 'protein_project'))
jupytools.syspath.add('rxrx1-utils')
if jupytools.is_notebook():
    from tqdm import tqdm_notebook as tqdm
else:
    from tqdm import tqdm as tdqm

import contextlib, io
with contextlib.redirect_stderr(io.StringIO()):
    from basedir import ROOT
    from dataset import load_data
    from visual import rgb, six


data_dict = load_data()
train_records, _ = data_dict['data']


stats = pd.read_csv(ROOT/'pixel_stats.csv')


channels = []
for (id_code, site), g in tdqm(stats.groupby(['id_code', 'site'])):
    g = g.sort_values(by='channel')
    channel_stats = g[['channel', 'mean', 'std', 'min', 'max']].to_dict('records')
    for d in channel_stats:
        d['channel'] = int(d['channel'])
        d['mean'], d['std'] = float(d['mean']), float(d['std'])
        d['min'], d['max'] = int(d['min']), int(d['max'])
    channels.append({'id_code': id_code, 'site': int(site), 'stats': channel_stats})


with open('channels.json', 'w') as f:
    json.dump(channels, f)
